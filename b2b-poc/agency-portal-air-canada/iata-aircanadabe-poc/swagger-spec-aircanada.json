{"openapi":"3.0.0","paths":{"/health":{"get":{"operationId":"HealthController_selfCheck","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","required":["status"],"properties":{"status":{"type":"string"}},"additionalProperties":true}}}}}}}},"summary":"this api check application running health","tags":["health"]}},"/api/proof-request":{"post":{"operationId":"ProofRequestController_requestTravelAgencyProofUrl","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProofRequestResponseDto"}}}},"400":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"summary":"This API will return Travel agency employee RP url for SD-JWT Credential","tags":["proof-request"]}},"/api/auth/agencies/{cred_proof_id}":{"get":{"operationId":"AuthController_authAgenciesRequestStatus","parameters":[{"name":"cred_proof_id","required":true,"in":"path","schema":{"example":"12434560-34534-235","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}},"401":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnAuthorizedResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"summary":"This API is used to retrieve the status of a proof-request validation for agency registration time.","tags":["rp-auth-status"]}},"/api/auth/agencies/employee/{cred_proof_id}":{"get":{"operationId":"AuthController_authAgenciesEmployeeRequestStatus","parameters":[{"name":"cred_proof_id","required":true,"in":"path","schema":{"example":"12434560-34534-235","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"}}}},"401":{"description":"A required parameter was missing in the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnAuthorizedResponse"}}}},"500":{"description":"The server encountered an unexpected condition that prevented it from fulfilling the request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InternalServerErrorResponse"}}}}},"summary":"This API is used to retrieve the status of a proof-request validation for agency employee registration time.","tags":["rp-auth-status"]}},"/api/idp/register-profile":{"post":{"operationId":"IdpController_registerIDPEmployee","parameters":[],"responses":{"201":{"description":""}},"summary":"register profile in air-canada IDP","tags":["Idp"]}},"/api/idp/reset":{"delete":{"operationId":"IdpController_resetDemo","parameters":[],"responses":{"200":{"description":""}},"summary":"Reset air-canada demo","tags":["Idp"]}},"/agency":{"get":{"operationId":"AgencyController_findOne","parameters":[],"responses":{"200":{"description":""}},"summary":"Get a agency with ID","tags":["Agency"]},"patch":{"operationId":"AgencyController_update","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateAgencyDto"}}}},"responses":{"200":{"description":""}},"summary":"Update agency","tags":["Agency"]}}},"info":{"title":"AIRCANADA API","description":"AIRCANADA PoC API","version":"1.0","contact":{}},"tags":[],"servers":[],"components":{"schemas":{"BadRequestResponse":{"type":"object","properties":{"message":{"type":"string","description":"A message providing details about why the request was considered bad. This could indicate missing or invalid parameters, for instance.","example":"A required parameter was missing in the request"},"error":{"type":"string","description":"The error type or category that explains the issue. In this case, it refers to a bad request due to invalid input or missing parameters.","example":"Bad Request"},"statusCode":{"type":"number","description":"The HTTP status code for the error. A 400 status code typically signifies a bad request.","example":400}},"required":["message","error","statusCode"]},"InternalServerErrorResponse":{"type":"object","properties":{"message":{"type":"string","description":"A message providing more details about the error. Typically describes an unexpected condition that occurred on the server while processing the request.","example":"The server encountered an unexpected condition that prevented it from fulfilling the request"},"error":{"type":"string","description":"The type of error or exception that occurred. In this case, it represents a generic internal server error exception.","example":"InternalServerErrorException"},"statusCode":{"type":"number","description":"The HTTP status code associated with the error. For internal server errors, this is typically 500.","example":500}},"required":["message","error","statusCode"]},"ProofRequestResponse":{"type":"object","properties":{"longUrl":{"type":"string","example":"openid4vp://?request_uri=https%3A%2F%2Faircanada.iata-poc.nborbit.ca%2Fsiop%2Fdefinitions%2Fagency_employee_vc_uri%2Fauth-requests%2Fa1be5f6e-d88a-4540-8c19-2804e27bd9"},"shortUrl":{"type":"string","example":"https://ac637oba22.execute-api.ca-central-1.amazonaws.com/dev/verifier/url/a1be5f6e-d88a-4540-8c19-2804e27bd9be"},"proofDefineId":{"type":"number","example":1},"credProofId":{"type":"string","example":"06004169-62da-44e8-8c6d-97159ff15c07"}},"required":["longUrl","shortUrl","proofDefineId","credProofId"]},"ProofRequestResponseDto":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"prepare qr proof request proceed successfully."},"data":{"$ref":"#/components/schemas/ProofRequestResponse"}},"required":["success","message","data"]},"UnAuthorizedResponse":{"type":"object","properties":{"message":{"type":"string","description":"A message providing details about why the resource could not have access. This may refer to missing endpoints or unavailable resources.","example":"Access denied, Please contact your agency admin"},"error":{"type":"string","description":"The error type indicating that the requested resource could not have access or permission. In this case, it refers to a \"UnauthorizedException\" error.","example":"UnauthorizedException"},"statusCode":{"type":"number","description":"The HTTP status code for the error. A 401 status code typically indicates that the requested resource was not have permission.","example":401}},"required":["message","error","statusCode"]},"AuthResponseData":{"type":"object","properties":{"state":{"type":"string","example":"success","enum":["generated","scanned","request-sent","proof-received","success","revoked","verification-failed"]},"verified":{"type":"boolean","example":true},"rpValue":{"type":"object","example":true},"agencyRecord":{"type":"object","example":true}},"required":["state","verified"]},"AuthResponseDto":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Proof request status retrieved successfully."},"data":{"$ref":"#/components/schemas/AuthResponseData"}},"required":["success","message","data"]},"UpdateAgencyDto":{"type":"object","properties":{"isAgencyRegistered":{"type":"boolean","default":false}},"required":["isAgencyRegistered"]}}}}